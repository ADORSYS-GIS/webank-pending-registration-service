name: Load Testing

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to run tests against'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - local

jobs:
  load-test:
    runs-on: ubuntu-latest
    environment: ${{ github.event.inputs.environment || 'dev' }}

    steps:
      - uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          cd qa/load-tests
          npm install

      - name: Run load tests
        run: |
          cd qa/load-tests
          export TARGET_URL="${{ secrets.TARGET_URL }}"
          npm run test:${{ github.event.inputs.environment || 'dev' }}
        continue-on-error: true

      - name: Generate HTML report
        run: |
          cd qa/load-tests
          artillery report --output load-test-report.html load-test-report.json
        continue-on-error: true

      - name: Upload test results
        uses: actions/upload-artifact@v3
        with:
          name: load-test-results
          path: qa/load-tests/load-test-report.json
          if-no-files-found: error

      - name: Upload HTML report
        uses: actions/upload-artifact@v3
        with:
          name: load-test-report-html
          path: qa/load-tests/load-test-report.html
          if-no-files-found: error

      - name: Process and display results
        run: |
          echo "## Load Test Results for Environment: ${{ github.event.inputs.environment || 'dev' }}"
          echo "### Branch"
          echo "- Branch: ${{ github.ref }}"
          echo "### Target URL"
          echo "- URL: ${{ secrets.TARGET_URL }}"
          echo "### Summary"
          
          # Check if report file exists and has content
          if [ -f "qa/load-tests/load-test-report.json" ]; then
            # Extract metrics with error handling
            TOTAL_REQUESTS=$(jq -r '.metrics.http.requests.total // 0' qa/load-tests/load-test-report.json)
            FAILED_REQUESTS=$(jq -r '.metrics.http.responses.errors // 0' qa/load-tests/load-test-report.json)
            SUCCESS_RATE=$(jq -r 'if .metrics.http.requests.total > 0 then ((.metrics.http.requests.total - .metrics.http.responses.errors) / .metrics.http.requests.total * 100) else 0 end' qa/load-tests/load-test-report.json)
            MEDIAN_RESPONSE=$(jq -r '.metrics.http.response_time.median // 0' qa/load-tests/load-test-report.json)
            P95_RESPONSE=$(jq -r '.metrics.http.response_time.p95 // 0' qa/load-tests/load-test-report.json)
            P99_RESPONSE=$(jq -r '.metrics.http.response_time.p99 // 0' qa/load-tests/load-test-report.json)
            
            echo "- Total Requests: $TOTAL_REQUESTS"
            echo "- Failed Requests: $FAILED_REQUESTS"
            echo "- Success Rate: ${SUCCESS_RATE}%"
            echo "### Response Times (ms)"
            echo "- Median: $MEDIAN_RESPONSE"
            echo "- P95: $P95_RESPONSE"
            echo "- P99: $P99_RESPONSE"
            
            # Extract endpoint performance with error handling
            echo "### Endpoint Performance"
            jq -r '.metrics.http.responses | to_entries[] | "- \(.key): \(.value) requests" // "- No endpoint data available"' qa/load-tests/load-test-report.json || echo "- No endpoint data available"
          else
            echo "Error: Load test report file not found or empty"
            echo "- Total Requests: 0"
            echo "- Failed Requests: 0"
            echo "- Success Rate: 0%"
            echo "### Response Times (ms)"
            echo "- Median: 0"
            echo "- P95: 0"
            echo "- P99: 0"
            echo "### Endpoint Performance"
            echo "- No endpoint data available"
          fi
        continue-on-error: true