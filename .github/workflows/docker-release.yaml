name: Build & Push Native Multi‑Arch Image

on:
  push:
    branches:
      - main
      - develop
      - 'feature/**'
      - 'hotfix/**'
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: "0"

      - name: Set up QEMU (for cross‑architecture emulation)
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx (multi‑arch builder)
        uses: docker/setup-buildx-action@v3

      - name: Lowercase the repository name
        id: string
        uses: AsZc/change-string-case-action@v6
        with:
          string: ${{ env.IMAGE_NAME }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          tags: |
            type=raw,value=latest,enable={{is_default_branch}}
            type=sha,format=short
            type=sha,format=long
            type=ref,event=branch
            type=schedule,pattern={{date 'YYYYMMDD-hhmmss' tz='Africa/Douala'}}
            type=semver,enable=true,priority=900
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}

          flavor: |
            latest=false
          images: "${{ env.REGISTRY }}/${{ steps.string.outputs.lowercase }}"

      - name: Log in to GHCR
        uses: docker/login-action@v3
        if: github.event_name != 'pull_request'
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}

      - name: Build & push multi‑arch image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: Dockerfile
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          annotations: ${{ steps.meta.outputs.annotations }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
